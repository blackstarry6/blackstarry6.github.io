<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Win7环境下VMareTools的安装</title>
    <link href="/2025/03/04/win7-vmare-tools/"/>
    <url>/2025/03/04/win7-vmare-tools/</url>
    
    <content type="html"><![CDATA[<h1 id="安装VMare-Tools"><a href="#安装VMare-Tools" class="headerlink" title="安装VMare Tools"></a>安装VMare Tools</h1><h2 id="安装流程"><a href="#安装流程" class="headerlink" title="安装流程"></a>安装流程</h2><p>1、在VMare中启动win7后，点击VMare主界面的**虚拟机(M)**选项，启动VMare Tools的安装;</p><p><img src="/2025/03/04/win7-vmare-tools/vmare_tools_dow_1.png"></p><p><img src="/2025/03/04/win7-vmare-tools/vmare_tools_dow_2.png"></p><p><img src="/2025/03/04/win7-vmare-tools/vmare_tools_dow_3.png"></p><p>2、点击允许 setup64.exe，一路下一步直到完成安装；</p><p><img src="/2025/03/04/win7-vmare-tools/vmare_tools_dow_4.png"></p><h2 id="安装失败的问题"><a href="#安装失败的问题" class="headerlink" title="安装失败的问题"></a>安装失败的问题</h2><p>​安装程序中途报错，显示无法自动安装 Virtual Machine Communication Interface Sockets (VSock) 驱动程序，必须手动安装此驱动程序。</p><p><img src="/2025/03/04/win7-vmare-tools/vmare_tools_dow_5.png"></p><p>​原因是微软更新了驱动程序的签名算法，从 2019 年初开始，逐步弃用SHA-1，改为SHA-2。可以通过安装补丁来解决这个问题。</p><p>​可以从 Microsoft Update Catalog 下载 KB4474419 和 KB4490628 这两个补丁，然后安装到 Win7 虚拟机中。在没有成功安装 VMware Tools的情况下，传文件不太方便，可以用虚拟机里浏览器访问下载页面，然后直接在虚拟机里下载安装。下载地址：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">https://www.catalog.<span class="hljs-keyword">update</span>.microsoft.<span class="hljs-keyword">com</span>/<span class="hljs-built_in">search</span>.aspx?q=kb4474419<br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">https://www.catalog.<span class="hljs-keyword">update</span>.microsoft.<span class="hljs-keyword">com</span>/<span class="hljs-built_in">search</span>.aspx?q=<span class="hljs-number">4490628</span><br></code></pre></td></tr></table></figure><p>​安装补丁后，重启虚拟机，然后重新 VMware Tools 即可。</p><p>​</p><p>​或者使用附录的ISO文件进行补丁安装。</p><h2 id="附录文件"><a href="#附录文件" class="headerlink" title="附录文件"></a>附录文件</h2><p>1、<a href="https://dl.google.com/release2/chrome/acihtkcueyye3ymoj2afvv7ulzxa_109.0.5414.120/109.0.5414.120_chrome_installer.exe">适合win7的32位Google </a></p><p>2、<a href="ISO%E8%A1%A5%E4%B8%81.zip">下载 ISO </a></p><p>3、<a href="ISO%E8%A1%A5%E4%B8%81.z01">下载 ISO 1</a></p><p>4、<a href="ISO%E8%A1%A5%E4%B8%81.z02">下载 ISO 2</a></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p>1、<a href="https://ihacksoft.com/archive/1397.html">完美解决：安装程序无法自动安装 Virtual Machine Communication…… - 嗨软</a></p><p>2、<a href="https://www.catalog.update.microsoft.com/search.aspx?q=kb4474419">https://www.catalog.update.microsoft.com/search.aspx?q=kb4474419</a></p><p>3、<a href="https://blog.csdn.net/Drug_/article/details/141402451">Chrome 浏览器 Windows 7 最终版下载（官方原版）_chrome win7-CSDN博客</a></p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>Env_Config</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VMaretools</tag>
      
      <tag>win7</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人博客搭建流程</title>
    <link href="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/"/>
    <url>/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h1><h2 id="1、github账号"><a href="#1、github账号" class="headerlink" title="1、github账号"></a>1、github账号</h2><h2 id="2、git安装"><a href="#2、git安装" class="headerlink" title="2、git安装"></a>2、git安装</h2><p>配置</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.name</span> <span class="hljs-string">&quot;Your Name&quot;</span><br>git config <span class="hljs-attr">--global</span> user<span class="hljs-selector-class">.email</span> <span class="hljs-string">&quot;email@example.com&quot;</span><br></code></pre></td></tr></table></figure><h2 id="3、NodeJS安装和（可选）配置"><a href="#3、NodeJS安装和（可选）配置" class="headerlink" title="3、NodeJS安装和（可选）配置"></a>3、NodeJS安装和（可选）配置</h2><p>备注：以管理员身份打开cmd窗口</p><ol><li><p><a href="https://nodejs.org/zh-cn/download/">NodeJS官网下载</a>，安装路径可以选择自定义路径，如D:\myweb\NodeJs</p></li><li><p>验证NodeJS安装，即查看node和npm版本</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">node</span> <span class="hljs-title">-v</span><br>npm -v<br></code></pre></td></tr></table></figure></li><li><p>在安装目录（D:\myweb\NodeJs）下创建两个文件夹，<code>node_global</code> 存放全局包，<code>node_cache</code> 存放node缓存和log记录</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">npm root -<span class="hljs-selector-tag">g</span> <br><span class="hljs-comment">//查看当前路径</span><br></code></pre></td></tr></table></figure></li><li><p>在cmd命令行中执行如下两条命令</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs routeros">npm<span class="hljs-built_in"> config </span><span class="hljs-built_in">set</span><span class="hljs-built_in"> prefix </span><span class="hljs-string">&quot;D:\xgweb\NodeJs\node_global&quot;</span><br><br>npm<span class="hljs-built_in"> config </span><span class="hljs-built_in">set</span> cache <span class="hljs-string">&quot;D:\xgweb\NodeJs\node_cache&quot;</span><br><br></code></pre></td></tr></table></figure></li><li><p>设置电脑环境变量，右键 “我的电脑”&#x3D;》属性&#x3D;》高级系统设置&#x3D;》环境变量；进入环境变量对话框，在【系统变量】中新建环境变量 <code>NODE_PATH</code>，值为 <code>D:\xgweb\NodeJs\node_global\node_modules</code>，其中 <code>D:\xgweb\NodeJs\node_global</code> 是新创建的全局模块安装路径；修改【用户变量】中的 <code>path</code> 变量，将 <code>C:\Users\..\AppData\Roaming\npm</code> 修改为<code>D:\xgweb\NodeJs\node_global</code></p></li><li><p>重启电脑，使配置生效</p></li></ol><h1 id="二、创建仓库"><a href="#二、创建仓库" class="headerlink" title="二、创建仓库"></a>二、创建仓库</h1><ol><li><p>在<code>GitHub</code>上创建一个新的代码仓库用于保存我们的网页。</p></li><li><p>点击<code>Your repositories</code>，进入仓库页面。点击<code>New</code>按钮，进入仓库创建页面，填写仓库名，格式必须为<code>&lt;用户名&gt;.github.io</code>，然后点击<code>Create repository</code>。</p></li><li><p>点击<code>creating a new file</code>创建一个新文件，作为我们网站的主页。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>111<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>111的个人主页<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello ~<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br><br></code></pre></td></tr></table></figure></li><li><p>在浏览器中访问成功</p></li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/page1.png"></p><h1 id="三、安装Hexo"><a href="#三、安装Hexo" class="headerlink" title="三、安装Hexo"></a>三、安装Hexo</h1><ol><li><p>安装Hexo(cmd管理员模式下)和查看版本</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br>hexo -v<br></code></pre></td></tr></table></figure><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/hexo_download.png"></p></li><li><p>创建一个项目并初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init hexo-blog<br><span class="hljs-built_in">cd</span> hexo-blog<br>npm install<br>//cmd管理员模式<br></code></pre></td></tr></table></figure><p>as</p></li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/hexo_init_1.png"></p><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/npm_install.png"></p><p>其内部文件结构如下（红框内为npm install 安装的）：</p><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/hexo-doc.png"></p><ol start="3"><li>本地启动<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo <span class="hljs-selector-tag">g</span><br>hexo s<br></code></pre></td></tr></table></figure><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/hexo_start.png"></li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/hexo-doc-1.png"></p><p>如上所示，public文件夹内为新生成的web文件，共计11项。</p><ol start="4"><li>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/web-1.png"></p><h1 id="四、更换主题"><a href="#四、更换主题" class="headerlink" title="四、更换主题"></a>四、更换主题</h1><h2 id="1、NexT主题"><a href="#1、NexT主题" class="headerlink" title="1、NexT主题"></a>1、NexT主题</h2><ol><li>下载NexT主题</li></ol><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">git clone git<span class="hljs-symbol">@github</span>.com:iissnan/hexo-theme-<span class="hljs-keyword">next</span>.git themes/<span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/clone_next.png"></p><ol start="2"><li>打开 _config.yml 文件，该文件为站点配置文件</li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/theme_set_next.png"></p><ol start="3"><li>本地启动，出现以下显示问题</li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/next_error.png"></p><ol start="4"><li><p>原因是hexo在5.0之后把swig给删除了需要自己手动安装</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> i hexo-renderer-swig<br></code></pre></td></tr></table></figure><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/npm_swig.png"></p></li><li><p>重新启动</p></li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/web-next.png"></p><p>参考：<a href="https://github.com/iissnan/hexo-theme-next/issues/2253">https://github.com/iissnan/hexo-theme-next/issues/2253</a></p><h2 id="2、Fluid主题"><a href="#2、Fluid主题" class="headerlink" title="2、Fluid主题"></a>2、Fluid主题</h2><ol><li>安装主题</li></ol><p>下载 <a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">最新 release 版本</a> 解压到 <code>themes</code> 目录，并将解压出的文件夹重命名为 <code>fluid</code></p><ol start="2"><li>指定主题</li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/theme_set_fluid.png"></p><ol start="3"><li><p>创建[关于页]</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">hexo <span class="hljs-keyword">new</span> page about<br></code></pre></td></tr></table></figure><p>编辑博客目录下 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p></li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/hexo_new_page_about.png"></p><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/page_about.png"></p><ol start="4"><li>重新启动</li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/web-fluid.png"></p><h1 id="五、创建文章"><a href="#五、创建文章" class="headerlink" title="五、创建文章"></a>五、创建文章</h1><h2 id="1、文章创建和图片插入"><a href="#1、文章创建和图片插入" class="headerlink" title="1、文章创建和图片插入"></a>1、文章创建和图片插入</h2><ol><li>修改 Hexo 博客目录中的 <code>_config.yml</code>，打开这个配置是为了在生成文章的时候生成一个同名的资源目录用于存放图片文件。</li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/config_set.png"></p><ol start="2"><li>创建一篇新文章，名为《测试文章》</li></ol><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">hexo <span class="hljs-built_in">new</span> <span class="hljs-built_in">post</span> 测试文章<br></code></pre></td></tr></table></figure><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/config_set_display.png"></p><ol start="3"><li>在md文件中插入图片的常用三种方式</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><br>&#123;<span class="hljs-string">%</span> <span class="hljs-string">asset_img</span> <span class="hljs-string">test.png</span> <span class="hljs-string">图片引用方法一</span> <span class="hljs-string">%</span>&#125;<br><br><br><span class="hljs-type">![</span><span class="hljs-string">图片引用方法二](test.png)</span><br><br><span class="hljs-string">需要在配置文件添加：</span><br><span class="hljs-attr">marked:</span><br>  <span class="hljs-attr">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">postAsset:</span> <span class="hljs-literal">true</span><br><br><br><br><span class="hljs-type">![</span><span class="hljs-string">图片引用方法三](/images/test.png)</span><br><span class="hljs-string">//images文件在在\source\images目录下</span><br><br></code></pre></td></tr></table></figure><p>如下分别是：</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs maxima">![](/测试文章/BA.jpg)<br>![](BA.jpg)<br>&#123;<span class="hljs-symbol">%</span> asset_img BA.jpg This <span class="hljs-built_in">is</span> an <span class="hljs-built_in">example</span> <span class="hljs-built_in">image</span> <span class="hljs-symbol">%</span>&#125;<br>&#123;<span class="hljs-symbol">%</span> asset_img <span class="hljs-string">&quot;BA.jpg&quot;</span> <span class="hljs-string">&quot;spaced title&quot;</span> <span class="hljs-symbol">%</span>&#125;<br></code></pre></td></tr></table></figure><p>对于如上四种中的第二种图片引用方法，需要对配置文件进行以下修改：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-params">post_asset_folder:</span> <span class="hljs-literal">true</span><br><span class="hljs-params">marked:</span><br>  <span class="hljs-params">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-params">postAsset:</span> <span class="hljs-literal">true</span><br><br></code></pre></td></tr></table></figure><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/web-2-1.png"></p><h2 id="2、md文件图片同步显示"><a href="#2、md文件图片同步显示" class="headerlink" title="2、md文件图片同步显示"></a>2、md文件图片同步显示</h2><p>如果需要同时在md文件显示图片，需要安装<strong>hexo-asset-image</strong> 插件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">npm install hexo-asset-<span class="hljs-selector-tag">image</span> <span class="hljs-attr">--save</span><br></code></pre></td></tr></table></figure><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/hexo_asset_image_dow.png"></p><p>重新启动</p><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/web-2-2.png"></p><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/web-2.png"></p><p>为什么会出现以下 &#x2F;.com&#x2F;&#x2F; 情况，其实是 <strong>hexo-asset-image</strong> 插件的bug</p><h3 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs verilog">npm uninstall hexo-asset-image<br>npm install https:<span class="hljs-comment">//github.com/CodeFalling/hexo-asset-image</span><br>hexo clean<br>hexo <span class="hljs-keyword">generate</span><br>hexo server <br></code></pre></td></tr></table></figure><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/hexo_asset_image_dow_1.png"></p><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/web-2-3.png"></p><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/web-2-3-1.png"></p><p>此时可以看出其他三种方法的解析路径出现多余的&#x2F;02&#x2F;10</p><h3 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h3><p>对hexo-asset-image（第一版）文件夹中的index.js中的文件进行如下修改：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-comment">//$(this).attr(&#x27;src&#x27;, config.root + link + src); </span><br>$(this)<span class="hljs-selector-class">.attr</span>(<span class="hljs-string">&#x27;src&#x27;</span>, data<span class="hljs-selector-class">.permalink</span><span class="hljs-selector-class">.split</span>(<span class="hljs-string">&#x27;example.com&#x27;</span>)<span class="hljs-selector-attr">[1]</span>+ <span class="hljs-attribute">src</span>);<br></code></pre></td></tr></table></figure><p>其问题如上图所示</p><p>参考：<a href="https://blog.csdn.net/sluck_0430/article/details/136431303">hexo图片显示不出且图片路径错误&#x2F;.com&#x2F;&#x2F;_hexo显示不了图片-CSDN博客</a></p><h3 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h3><p>对hexo-asset-image（第一版）文件夹中的index.js中的文件进行如下修改（第23行的else分支）：</p><figure class="highlight cal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cal">//<span class="hljs-keyword">var</span> endPos = link.lastIndexOf(<span class="hljs-string">&#x27;.&#x27;</span>);<br><span class="hljs-keyword">var</span> endPos = link.lastIndexOf(<span class="hljs-string">&#x27;/&#x27;</span>);<br></code></pre></td></tr></table></figure><p>其问题依然如上图所示</p><p>参考：<a href="https://blog.asroads.com/post/95d84581.html">Hexo生成博文插入图片 | Asroads’Blog</a></p><p>最终决定卸载hexo-asset-image插件</p><h1 id="六、个性化页面展示"><a href="#六、个性化页面展示" class="headerlink" title="六、个性化页面展示"></a>六、个性化页面展示</h1><h2 id="博客标题"><a href="#博客标题" class="headerlink" title="博客标题"></a>博客标题</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-params">navbar:</span><br>  <span class="hljs-comment"># 导航栏左侧的标题，为空则按 hexo config 中 `title` 显示</span><br>  <span class="hljs-comment"># The title on the left side of the navigation bar. If empty, it is based on `title` in hexo config</span><br>  <span class="hljs-comment">#blog_title: &quot;Fluid&quot;</span><br>  <span class="hljs-params">blog_title:</span> <span class="hljs-string">&quot;blackstarry6&quot;</span><br></code></pre></td></tr></table></figure><h2 id="主页正中间的文字"><a href="#主页正中间的文字" class="headerlink" title="主页正中间的文字"></a>主页正中间的文字</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs nix"><span class="hljs-params">slogan:</span><br>  <span class="hljs-params">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span><br>  <span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span><br>  <span class="hljs-comment">#text: &quot;An elegant Material-Design theme for Hexo&quot;</span><br>  <span class="hljs-params">text:</span> <span class="hljs-string">&quot;XXX 个人博客&quot;</span><br></code></pre></td></tr></table></figure><h2 id="主页展示"><a href="#主页展示" class="headerlink" title="主页展示"></a>主页展示</h2><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/web-fluid-1.png"></p><h1 id="七、发布到Github-Pages"><a href="#七、发布到Github-Pages" class="headerlink" title="七、发布到Github Pages"></a>七、发布到Github Pages</h1><p>安装hexo-deployer-git</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install hexo-deployer-git <span class="hljs-comment">--save</span><br><br></code></pre></td></tr></table></figure><p>修改配置文件，其中 <code>token</code> 为 <code>GitHub</code> 的 <code>Personal access tokens</code></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> XXX<br><span class="hljs-symbol">  branch:</span> main<br><span class="hljs-symbol">  token:</span> XXX<br><br></code></pre></td></tr></table></figure><p>部署到github</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hexo <span class="hljs-selector-tag">g</span> -d<br></code></pre></td></tr></table></figure><p>参考：</p><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">GitHub Pages + Hexo搭建个人博客网站，史上最全教程_hexo博客-CSDN博客</a></p><p><a href="https://blog.csdn.net/yaorongke/article/details/119085413">Git安装(Windows)_windows git安装包-CSDN博客</a></p><p><a href="https://blog.csdn.net/yaorongke/article/details/119084295">NodeJS安装及配置(Windows)_welcome to node.js v14.21.3. type “.help” for more-CSDN博客</a></p><p><a href="https://blog.csdn.net/zimeng303/article/details/112167688">NodeJs 的安装及配置环境变量_nodejs配置环境变量-CSDN博客</a></p><p><a href="https://blog.csdn.net/m0_43401436/article/details/107191688">hexo博客中插入图片失败——解决思路及个人最终解决办法_hexo 文章插入图片失败-CSDN博客</a></p><h1 id="附录：SSH配置"><a href="#附录：SSH配置" class="headerlink" title="附录：SSH配置"></a>附录：SSH配置</h1><ol><li>生成密钥对</li></ol><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">ssh</span>-keygen -t ed25519 -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br><br><span class="hljs-comment">//如果您使用的是不支持 Ed25519 算法的旧版系统，请使用</span><br><span class="hljs-symbol">ssh</span>-keygen -t rsa -<span class="hljs-keyword">b</span> <span class="hljs-number">4096</span> -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><ol start="2"><li><p>在.&#x2F;ssh文件下查看生成的密钥对，复制.pub内的公钥内容</p></li><li><p>Github账号上添加公钥</p></li></ol><p><code>Settings</code>&#x3D;&gt;<code>SSH and GPG keys</code>&#x3D;&gt;<code>New SSH key</code>&#x3D;&gt;<code>Key</code>，在title中简单描述一下</p><ol start="4"><li>验证是否成功，即连接github服务器，此时出现如下情况：</li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/ssh-1.png"></p><ol start="5"><li>换成443端口：</li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/ssh-2.png"></p><ol start="6"><li>对.&#x2F;ssh文件中的config文件（没有的话自己建立）进行如下修改：</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment"># Add section below to it</span><br><span class="hljs-attribute">Host</span> github.com<br>  <span class="hljs-attribute">Hostname</span> ssh.github.com<br>  <span class="hljs-attribute">Port</span> <span class="hljs-number">443</span><br><br></code></pre></td></tr></table></figure><ol start="7"><li>重新连接github服务器：</li></ol><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/ssh-3.png"></p><p>参考链接：</p><p><a href="https://blog.csdn.net/weixin_42310154/article/details/118340458">Github配置ssh key的步骤（大白话+包含原理解释）_github生成ssh key-CSDN博客</a></p><p><a href="https://githubdocs.cn/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent?platform=windows">在 SSH 代理中生成新的 SSH 密钥并添加它 - GitHub 文档 - GitHub 文档</a></p><p><a href="https://blog.csdn.net/misakivv/article/details/144929627">解决 ssh connect to host github.com port 22 Connection timed out_ssh: connect to host gitlab.sdlg.cn port 30022: co-CSDN博客</a></p><h2 id="可能出现的问题和解决方案"><a href="#可能出现的问题和解决方案" class="headerlink" title="可能出现的问题和解决方案"></a>可能出现的问题和解决方案</h2><p><img src="/2025/02/19/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%B5%81%E7%A8%8B/git_solve_1.png"></p><p>来源：<a href="https://blog.csdn.net/fearlessxmm/article/details/90401690">https://blog.csdn.net/fearlessxmm/article/details/90401690</a>  </p>]]></content>
    
    
    <categories>
      
      <category>技术</category>
      
      <category>Web</category>
      
    </categories>
    
    
    <tags>
      
      <tag>web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2025/02/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <url>/2025/02/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>1</p><p><img src="/2025/02/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/BA.jpg"></p><p>1</p><p>banner_img:&#x2F;测试文章&#x2F;BA.jpg</p><p>官方引用</p><img src="/2025/02/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/BA.jpg" class="" title="This is an example image"><img src="/2025/02/10/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/BA.jpg" class="" title="spaced title">]]></content>
    
    
    
    <tags>
      
      <tag>exam</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/02/10/hello-world/"/>
    <url>/2025/02/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>exam</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
